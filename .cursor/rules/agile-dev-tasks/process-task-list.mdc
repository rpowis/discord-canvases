---
description: Agile task processing protocol focusing on working software every iteration, demo checkpoints, and rapid iteration
globs:
alwaysApply: false
---
# Rule: Task List Management

Guidelines for managing task lists in markdown files to track progress on completing a PRD

## Task Implementation
- **One sub-task at a time:** Do **NOT** start the next sub‑task until you ask the user for permission and they say “yes” or "y"
- **Completion protocol:**  
  1. When you finish a **sub‑task**, immediately mark it as completed by changing `[ ]` to `[x]`.  
  2. If **all** subtasks underneath a parent task are now `[x]`, also mark the **parent task** as completed.  
- Stop after each sub‑task and wait for the user’s go‑ahead.
- Working‑software emphasis: If two consecutive sub‑tasks yield no user‑visible progress, re‑prioritize the next sub‑task to deliver a demoable change.
- Mocks policy: When a sub‑task involves a time‑consuming or costly integration, prefer a mock for this iteration, and add a follow‑up sub‑task to replace it with the real integration.

## Task List Maintenance

1. **Update the task list as you work:**
   - Mark tasks and subtasks as completed (`[x]`) per the protocol above.
   - Add new tasks as they emerge.

2. **Maintain the “Relevant Files” section:**
   - List every file created or modified.
   - Give each file a one‑line description of its purpose.
   - Mark file status: (CREATED/UPDATED/MOCKED/REAL). If MOCKED, specify intended real counterpart/boundary.

## AI Instructions

When working with task lists, the AI must:

1. Regularly update the task list file after finishing any significant work.
2. Follow the completion protocol:
   - Mark each finished **sub‑task** `[x]`.
   - Mark the **parent task** `[x]` once **all** its subtasks are `[x]`.
3. Add newly discovered tasks.
4. Keep “Relevant Files” accurate and up to date.
5. Before starting work, check which sub‑task is next.
6. After implementing a sub‑task, update the file and then pause for user approval.
7. Add a short demo note for any user‑facing change (what to click/see, or command to run).  
8. Default to shipping user‑visible changes behind a feature flag/guard; include a one‑line toggle/rollback note when applicable.